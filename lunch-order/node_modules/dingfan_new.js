var express = require('express');
var menu = require('menu');
var gzippo = require('gzippo');
var freader = require('htmlrender');
var jsutil = require("jsutil");
var gmlog = require("gmlog");
var fs = require('fs');
var G = require('global');  
var money = require('money');
G.CONFIG = require('config');
var MemoryStore = express.session.MemoryStore;
var sessionStroe = new MemoryStore();
String.prototype.$ = function(r, v){ return this.replace(new RegExp('<!-- ' + r + ' -->', 'g'), v);};
String.prototype.trim = function() { return this.replace(/^\s+/g,"").replace(/\s+$/g,""); };
Function.prototype.getstr = function() {  
    var lines = new String(this);  
    lines = lines.substring(lines.indexOf("/*") + 3, lines.lastIndexOf("*/"));  
    return lines;  
};
var Set = function() {}
Set.prototype.add = function(o) { this[o] = true; }
Set.prototype.remove = function(o) { delete this[o]; }
var chongzhi = {};
var randompics = 8;
var allpics = [];
var PICPATH = "E:/pic/bz";
var dingdan_list_links = "";
var dingdan_lists = [];
var stooped = true;
var czurl = '/cz_26B05A54-ECBC-4fd3-863B-21B9FC3CC1162767F6D5-124E-4cab-9AE3-04DF832DDA885EC058D3-C442-4964-8AC7-EC24491ECA49';
var stopurl = '/stop_fyug767i6u78hi7uu76tgiig78o67h76ho78oj76ho';
var starturl = '/start_65g7i86i6u67u67uui6i7hi78joi9jhhgu65';
var selecturl = '/select_gjyuyduf8gkgtm6jgtjt7jrh6vjhutr';
var menukey = '';
// ------------------------------------------------------------------------
fs.readdir(PICPATH, function(err, files){
    for (var idx in files){
        allpics.push(files[idx]);
    }
});
// ------------------------------------------------------------------------
function randomString(bits){
    var chars,rand,i,ret
      chars='ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
      ret=''
      // in v8, Math.random() yields 32 pseudo-random bits (in spidermonkey it gives 53)
      while(bits > 0){
        rand=Math.floor(Math.random()*0x100000000) // 32-bit integer
        // base 64 means 6 bits per character, so we use the top 30 bits from rand to give 30/6=5 characters.
        for(i=26; i>0 && bits>0; i-=6, bits-=6) ret+=chars[0x3F & rand >>> i]}
      return ret
}
// ------------------------------------------------------------------------
fs.readdir(__dirname + "/log/", function(err, files){
    for (var idx in files){
        dingdan_lists.push(files[idx].replace('gmlog_', '').replace('.log', ''));
    }

    dingdan_list_links = function(){
        var result = "<br/><b>订单存档</b><br />";
        for (var idx in dingdan_lists.reverse()){
            result += "<a href=\"/log/" + dingdan_lists[idx] +"\">"+dingdan_lists[idx]+"</a><br/>";
        }
        return result;
    }();

});
// ------------------------------------------------------------------------
function Send(res, c){
    try{res.send(c);}catch(err){}
}
// ------------------------------------------------------------------------
function get_mainpage(content){
    var gmtoolsfmt = freader('gmtools');
    return gmtoolsfmt.$('content', content)
}
// ------------------------------------------------------------------------
function get_money(name){
    if (!money[name])
        return 0;
    return money[name];
}
// ------------------------------------------------------------------------
function add_money(req, name, money_add){
    if (!money[name])
        money[name] = 0;
    money[name] += money_add;

    jsutil.SaveFile("money.js",
    "MONEY = \n"
    + JSON.stringify(money).replace(/,/g, ',\n')
    + ";\nmodule.exports = MONEY;");

    if (money_add > 0)
        gmlog.log(req.connection.remoteAddress + ' ' + name + " 充值 " + money_add.toString() + "， 余额 " + money[name].toString());
    else if (money_add < 0)
        gmlog.log(req.connection.remoteAddress + ' ' + name + " 扣款 " + Math.abs(money_add).toString() + "， 余额 " + money[name].toString());
}
// ------------------------------------------------------------------------
function arrcount(arr, v){
    var t = 0;
    for (var idx in arr){
        if (arr[idx] == v){
            t++;
        }
    }
    return t;
}
// ------------------------------------------------------------------------
function maptostr(map){
    var info = '';
    for (var k in map){
        var list = map[k];
        info += '<li><b>' + k  + '</b>[共' + (list.length - 1).toString() + '份/' + list[0].toString() + '元]' + '：';
        var s = new Set();
        for (var idx in list){
            if (idx == 0)
                continue;
            if (list[idx] in s)
                continue;
            s.add(list[idx]);
            var morethanone = arrcount(list, list[idx]);
            info += list[idx];
            if (morethanone > 1)
                info += '<sup>' + morethanone.toString() + '份</sup>';
            if (idx != list.length - 1)
                info += '，';
        }
        info += "</li>";
    } 
    return info;
}
// ------------------------------------------------------------------------
function show_log(s){
    var log = s;
    var loglist = log.split('\n');
    var count = loglist.length-1;
    var moneytotal = 0;
    var menumap = {};
    var usermap = {};
    for (var idx in loglist){
        var one = loglist[idx];
        var arr = one.split(' ');
        if (arr.length != 7)
            continue;
        var usr = arr[3];
        var item_name = arr[5];
        //var item_name = arr[4] + ' ' + arr[5];
        var item_money = parseFloat(arr[6]);
        moneytotal += item_money;

        if (!menumap[item_name]){
            menumap[item_name] = [0]
        }
        menumap[item_name][0] += item_money;
        menumap[item_name].push(usr);

        if (!usermap[usr]){
            usermap[usr] = [0];
        }
        usermap[usr][0] += item_money;
        usermap[usr].push(item_name + '（' + item_money.toString() + '元）');

    }
    var info = "<br /><br /><a name='dd'></a>今日订单，总额" + moneytotal.toString() + "元<hr />";
    info += maptostr(menumap);
    info += "<hr />";
    info +=maptostr(usermap);
    return info;
}
// ------------------------------------------------------------------------
var czform_cus = function(){
/*
<hr/>
<pre>
<a name="cz"></a>
<b>充值</b>
向张瓅购买充值卡，张瓅会给你一个卡号，于是您就可以在这里输入卡号充值了
卡号对应了充值金额，并且是一次性的
请放心充值，一旦您离职、不再想订饭、钱花光了、失恋、生病等任何原因，都可以退回已充值的金额
您可以给自己充值也可以帮朋友或您暗恋的人充值
<form method = "post" action="/money">
真实姓名
<input name="username" type="text" maxlength="64" />
卡号
<input name="number" type="text" maxlength="1024" />
<input type="submit" value="充值"  />
</form>
<hr/>
<a href="/menu">返回</a>
</pre>
*/
}.getstr();
// ------------------------------------------------------------------------
var czform = '<form method = "post" action="' + czurl + function(){
/*
">
金额<br />
<input name="number" type="text" maxlength="64" /><br />
<input type="submit" value="提交"  />
</form>
*/
}.getstr();
// ------------------------------------------------------------------------
function show_money(){
    var result = '<a href="/menu">返回</a><hr/><pre><b>余额</b><br/><br/>';
    for (var key in money){
        result += key;
        if (money[key] >= 0)
            result += ":" + money[key].toString() + '<br/>';
        else
            result += ':<font color="#FF0000">' + money[key].toString() + '</font><br/>';
    }
    result += '</pre>';
    return result;
}
// ------------------------------------------------------------------------
var app = express.createServer();
app.configure(function(){
    app.use(express.methodOverride());
    app.use(express.bodyParser());
    app.use(express.cookieParser());
    app.use(express.session({secret:'123456', store:sessionStroe, key:'express.sid'}));
    //app.use(gzippo.staticGzip(__dirname + '/public/resource')); 
    //app.use(gzippo.compress());
    app.use(express.static(__dirname + '/public/resource'));
    app.use(express.errorHandler({
        dumpExceptions:true,
        showStack:true
    }));
    app.use(app.router);
});
// ------------------------------------------------------------------------
app.get(czurl, function(req, res){
    res.send(czform);
});
// ------------------------------------------------------------------------
app.post(czurl, function(req, res){
    var number = req.body.number;
    if (!number){
        res.redirect(czurl);
        return;
    }   
    number = parseInt(number);
    var cardno = randomString(256) + (new Date().getTime()).toString();
    chongzhi[cardno] = number;
    res.send(cardno + ":" + number.toString());
});
// ------------------------------------------------------------------------
app.post('/money', function(req, res){
    var username = req.body.username;
    var cardno = req.body.number;
    if (!username || !username.trim() || !cardno || !chongzhi[cardno]){
        Send(res, get_mainpage('充值失败'));
        return;
    }

    add_money(req, username.trim(), chongzhi[cardno]);
    delete chongzhi[cardno];
    res.redirect('/money');
});
// ------------------------------------------------------------------------
app.get('/', function(req, res){
    Send(res, freader('login'));
});
// ------------------------------------------------------------------------
app.get(stopurl, function(req, res){
    stooped = true;
    res.redirect('/menu');
});
// ------------------------------------------------------------------------
app.get(starturl, function(req, res){    
    var homestr = '<pre>';
    for (key in menu){
        homestr += '<a href="' + selecturl + '?k=' + key + '">' + key + '</a><br />';
    }
    homestr += '</pre>';
    Send(res, get_mainpage(homestr));
});
// ------------------------------------------------------------------------
app.get(selecturl, function(req, res){
    stooped = false;
    menukey = req.query['k'].toString();
    res.redirect('/menu');
});
// ------------------------------------------------------------------------
app.get('/log/*', function(req, res){
    try{
        var idx = req.url.lastIndexOf('/');
        var name = req.url.substring(idx+1);
        var path = __dirname + "/log/gmlog_" + name + ".log";
        var s = fs.readFileSync(path).toString();
        res.send(get_mainpage("<pre>" + s + "</pre>")); 
    }catch(err){
        res.send('');
    }
});
// ------------------------------------------------------------------------
app.get('/money', function(req, res){
    Send(res, get_mainpage(show_money() + czform_cus));
});
// ------------------------------------------------------------------------
app.get('/df', function(req, res){

    if (!req.session.uid){
        res.redirect('/');
        return;
    }

    if (stooped){
        Send(res, get_mainpage('今日订饭已结束'));
        return;
    }

    var key = req.query['k'].toString();
    var idx = parseInt(req.query['idx']);
    var list = menu[key];
    var item = list[idx];

    if (get_money(req.session.uid) < item[1]){
        Send(res, get_mainpage('您的余额不足，请先充值'));
        return;
    }

    gmlog.log(req.connection.remoteAddress + ' ' + req.session.uid + " " + key + " " + item[0] + " " + item[1].toString());
    add_money(req, req.session.uid, -item[1]);

    req.session.isok = true;
    if (!req.session.pics)
        req.session.pics = randompics;
    else
        req.session.pics += randompics;

    res.redirect('/menu#dd');
});
// ------------------------------------------------------------------------
app.get('/pic', function(req, res){
    try{
        if (!req.session.isok){
            Send(res, get_mainpage('请先订饭'));
            return;
        }
        if (!req.session.pics){
            Send(res, get_mainpage('您的随机图片限额已用完，请再订饭，可再获取' + randompics.toString() + '个限额'));
            return;
        }
        req.session.pics--;
        var idx = req.url.lastIndexOf('/');
        var name = req.url.substring(idx+1);
        var path = PICPATH + "/" + allpics[parseInt(Math.random() * 100000) % allpics.length];
        var s = fs.readFileSync(path);
        res.contentType('image/jpeg'); 
        res.send(s);
    }catch(err){
        res.send(get_mainpage('读取图片出错，请刷新'));
    }
});
// ------------------------------------------------------------------------
app.get('/log', function(req, res){
    Send(res, get_mainpage('<a href="/menu">返回</a><hr/>' + dingdan_list_links + '<hr/><a href="/menu">返回</a>'));
});
// ------------------------------------------------------------------------
app.get('/menu', function(req, res){
    if (!req.session.uid){
        res.redirect('/');
        return;
    }
    var now = new Date();
    var datestr = jsutil.dateToStr(now);
    
    var info = '';
    try{
        var log = fs.readFileSync(__dirname + "/log/gmlog_" + datestr + ".log").toString();;
        info = show_log(log);
    }catch(err){}
    var menustr = '';    
    menustr += req.session.uid[0]+'同学您好，您的余额为'+get_money(req.session.uid)+'元，今天的菜单由<b>' + menukey
    + '</b>提供<br />'
    + '<a href="/">更换用户名</a>|<a href="/money">查看余额</a>|<a href="/money#cz">充值</a>|<a href="/log">历史</a>'
    + '<br />订餐请直接点击下面的链接，订餐后可获得奖励<a href="/pic">[图片]</a><br />';
    if (stooped)
        menustr += '<b>今日订饭已结束</b><br />';
    else{
        menustr += '<hr /><b>菜单</b><br/>';
        var list = menu[menukey];
        for (var idx in list){
            var item = list[idx];
            menustr += '<li><a href="/df?k=' + menukey + '&idx=' + idx.toString() + '"">' + item[0] + '&nbsp;' + item[1].toString() + '元</a></li>';
        }
    }
    Send(res, get_mainpage(menustr + info));
})
// ------------------------------------------------------------------------
app.post('/login', function(req, res){
    var user = req.body.username.toString();
    if (!user || !user.trim()){
        Send(res, get_mainpage('名字不能为空'));
        return;
    }
    if (user.indexOf(' ') >= 0){
        Send(res, get_mainpage('名字不能带有空格'));
        return;
    }
    user = user.trim();
    req.session.uid = user;    
    res.redirect('/menu');
});
// ------------------------------------------------------------------------
function webapp(){}
webapp.app = app;
module.exports = webapp;
